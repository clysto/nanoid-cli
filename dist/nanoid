#!/usr/bin/env node
(()=>{var e={755:(e,r,t)=>{"use strict";t.r(r);t.d(r,{customAlphabet:()=>customAlphabet,customRandom:()=>customRandom,nanoid:()=>nanoid,random:()=>random,urlAlphabet:()=>a});const n=require("crypto");const a="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";const i=128;let o,l;let fillPool=e=>{if(!o||o.length<e){o=Buffer.allocUnsafe(e*i);(0,n.randomFillSync)(o);l=0}else if(l+e>o.length){(0,n.randomFillSync)(o);l=0}l+=e};let random=e=>{fillPool(e-=0);return o.subarray(l-e,l)};let customRandom=(e,r,t)=>{let n=(2<<31-Math.clz32(e.length-1|1))-1;let a=Math.ceil(1.6*n*r/e.length);return(i=r)=>{let o="";while(true){let r=t(a);let l=a;while(l--){o+=e[r[l]&n]||"";if(o.length===i)return o}}}};let customAlphabet=(e,r=21)=>customRandom(e,r,random);let nanoid=(e=21)=>{fillPool(e-=0);let r="";for(let t=l-e;t<l;t++){r+=a[o[t]&63]}return r}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var a=r[t]={exports:{}};var i=true;try{e[t](a,a.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return a.exports}(()=>{__nccwpck_require__.d=(e,r)=>{for(var t in r){if(__nccwpck_require__.o(r,t)&&!__nccwpck_require__.o(e,t)){Object.defineProperty(e,t,{enumerable:true,get:r[t]})}}}})();(()=>{__nccwpck_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r)})();(()=>{__nccwpck_require__.r=e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})}})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var t={};(()=>{const{nanoid:e,customAlphabet:r}=__nccwpck_require__(755);function print(e){process.stdout.write(e+"\n")}function error(e){process.stderr.write(e+"\n");process.exit(1)}if(process.argv.includes("--help")||process.argv.includes("-h")){print(`\n  Usage\n    $ nanoid [options]\n  Options\n    -s, --size       Generated ID size\n    -a, --alphabet   Alphabet to use\n    -h, --help       Show this help\n  Examples\n    $ nanoid --s 15\n    S9sBF77U6sDB8Yg\n    $ nanoid --size 10 --alphabet abc\n    bcabababca`);process.exit()}let t,n;for(let e=2;e<process.argv.length;e++){let r=process.argv[e];if(r==="--size"||r==="-s"){n=Number(process.argv[e+1]);e+=1;if(Number.isNaN(n)||n<=0){error("Size must be positive integer")}}else if(r==="--alphabet"||r==="-a"){t=process.argv[e+1];e+=1}else{error("Unknown argument "+r)}}if(t){let e=r(t,n);print(e())}else{print(e(n))}})();module.exports=t})();